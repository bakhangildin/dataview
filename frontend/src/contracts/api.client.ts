// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size
// @generated from protobuf file "contracts/api.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Explorer } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LsResponse } from "./api";
import type { LsRequest } from "./api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Explorer
 */
export interface IExplorerClient {
    /**
     * @generated from protobuf rpc: Ls(LsRequest) returns (LsResponse);
     */
    ls(input: LsRequest, options?: RpcOptions): UnaryCall<LsRequest, LsResponse>;
}
/**
 * @generated from protobuf service Explorer
 */
export class ExplorerClient implements IExplorerClient, ServiceInfo {
    typeName = Explorer.typeName;
    methods = Explorer.methods;
    options = Explorer.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Ls(LsRequest) returns (LsResponse);
     */
    ls(input: LsRequest, options?: RpcOptions): UnaryCall<LsRequest, LsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<LsRequest, LsResponse>("unary", this._transport, method, opt, input);
    }
}
